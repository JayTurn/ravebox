{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jay/Documents/projects/ravebox/client/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/**\n * index.tsx\n * Home screen.\n */\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Head from 'next/head';\nimport * as React from 'react';\nimport LinkElement from '../src/components/elements/link/Link';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'; // Components.\n\nimport Logo from '../src/components/logo/Logo';\nimport ListByQuery from '../src/components/review/listByQuery/ListByQuery';\nimport ListTitle from '../src/components/elements/listTitle/ListTitle'; // Enumerators.\n\nimport { PresentationType, ReviewListType } from '../src/components/review/listByQuery/ListByQuery.enum';\nimport { StyleType } from '../src/components/elements/link/Link.enum'; // Interfaces.\n\n// Retrieve the list of categories.\nvar categoryList = require('../src/components/category/categories.json').ontology;\n/**\n * Create the theme styles to be used for the display.\n */\n\n\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    aboutContainer: {\n      backgroundColor: theme.palette.secondary.dark,\n      padding: theme.spacing(6, 2)\n    },\n    aboutContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    aboutText: {\n      color: theme.palette.common.white,\n      fontSize: '1.8rem',\n      fontWeight: 400,\n      marginBottom: theme.spacing(6),\n      marginTop: theme.spacing(0),\n      textAlign: 'center',\n      textShadow: \"0 1px 1px rgba(0,32,27,0.2)\"\n    },\n    aboutTextLarge: {\n      fontSize: '2.5rem',\n      marginTop: theme.spacing(6)\n    },\n    containerPadding: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    introContainer: {\n      backgroundColor: theme.palette.common.white,\n      padding: theme.spacing(4, 2, 4)\n    },\n    introContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    introText: {\n      color: theme.palette.text.secondary,\n      fontSize: '1.8rem',\n      fontWeight: 300,\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      textAlign: 'center'\n    },\n    introTextLarge: {\n      fontSize: '2.5rem'\n    }\n  });\n});\n/**\n * Retrieves the top level product categories.\n *\n * @return Array<string>\n */\n\nvar getTopLevelCategories = function getTopLevelCategories(list) {\n  var categories = []; // Loop through the list of categories and add the top level items to the\n  // array.\n\n  var i = 0;\n\n  do {\n    var current = list[i];\n    categories.push(current.key);\n    i++;\n  } while (i < list.length);\n\n  return categories;\n};\n/**\n * Home component.\n */\n\n\nvar Home = function Home() {\n  _s();\n\n  // Define the component classes.\n  var classes = useStyles(),\n      theme = useTheme(),\n      largeScreen = useMediaQuery(theme.breakpoints.up('sm')),\n      queries = getTopLevelCategories(categoryList);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"ravebox\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(classes.introContainer, _defineProperty({}, classes.introContainerLarge, largeScreen)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    fullWidth: largeScreen ? '270px' : '200px',\n    iconOnly: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    className: clsx(classes.introText, _defineProperty({}, classes.introTextLarge, largeScreen)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Everything reviewed in 2 minutes or less.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(LinkElement, {\n    path: '/product/add',\n    styleType: StyleType.BUTTON_PRIMARY,\n    title: \"Post a rave\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[0]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[0]],\n    title: __jsx(ListTitle, {\n      title: \"\".concat(categoryList[0].label, \" raves\"),\n      url: \"/categories/\".concat(categoryList[0].key),\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[1]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[1]],\n    title: __jsx(ListTitle, {\n      title: \"\".concat(categoryList[1].label, \" raves\"),\n      url: \"/categories/\".concat(categoryList[1].key),\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(classes.aboutContainer, _defineProperty({}, classes.aboutContainerLarge, largeScreen)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h2\",\n    className: clsx(classes.aboutText, _defineProperty({}, classes.aboutTextLarge, largeScreen)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"A way to discover products and share your experiences with the world.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, __jsx(LinkElement, {\n    path: '/about',\n    styleType: StyleType.BUTTON_SECONDARY_INVERSE,\n    title: \"About ravebox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[2]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[2]],\n    title: __jsx(ListTitle, {\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      title: \"\".concat(categoryList[2].label, \" raves\"),\n      url: \"/categories/\".concat(categoryList[2].key),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[3]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[3]],\n    title: __jsx(ListTitle, {\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      title: \"\".concat(categoryList[3].label, \" raves\"),\n      url: \"/categories/\".concat(categoryList[3].key),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(Home, \"MRrdU1Lg6hU8h7MX5xb/KCw/gys=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jay/Documents/projects/ravebox/client/pages/index.tsx"],"names":["clsx","createStyles","makeStyles","useTheme","Grid","Head","React","LinkElement","Typography","useMediaQuery","Logo","ListByQuery","ListTitle","PresentationType","ReviewListType","StyleType","categoryList","require","ontology","useStyles","theme","aboutContainer","backgroundColor","palette","secondary","dark","padding","spacing","aboutContainerLarge","aboutText","color","common","white","fontSize","fontWeight","marginBottom","marginTop","textAlign","textShadow","aboutTextLarge","containerPadding","paddingLeft","paddingRight","introContainer","introContainerLarge","introText","text","introTextLarge","getTopLevelCategories","list","categories","i","current","push","key","length","Home","classes","largeScreen","breakpoints","up","queries","BUTTON_PRIMARY","props","categoryGroup","CATEGORY","GRID","SCROLLABLE","label","BUTTON_SECONDARY_INVERSE"],"mappings":"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","sourcesContent":["/**\n * index.tsx\n * Home screen.\n */\nimport API from '../src/utils/api/Api.model';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Head from 'next/head'\nimport * as React from 'react';\nimport LinkElement from '../src/components/elements/link/Link';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Components.\nimport Logo from '../src/components/logo/Logo';\nimport ListByQuery from '../src/components/review/listByQuery/ListByQuery';\nimport ListTitle from '../src/components/elements/listTitle/ListTitle';\n\n// Enumerators.\nimport {\n  PresentationType,\n  ReviewListType\n} from '../src/components/review/listByQuery/ListByQuery.enum';\nimport { StyleType } from '../src/components/elements/link/Link.enum';\n\n// Interfaces.\nimport { Category, CategoryItem } from '../src/components/category/Category.interface';\nimport { HomeProps } from './Home.interface';\nimport { ReviewGroup } from '../src/components/review/Review.interface';\n\n// Retrieve the list of categories.\nconst categoryList: Array<Category> = require('../src/components/category/categories.json').ontology;\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    aboutContainer: {\n      backgroundColor: theme.palette.secondary.dark,\n      padding: theme.spacing(6, 2),\n    },\n    aboutContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    aboutText: {\n      color: theme.palette.common.white,\n      fontSize: '1.8rem',\n      fontWeight: 400,\n      marginBottom: theme.spacing(6),\n      marginTop: theme.spacing(0),\n      textAlign: 'center',\n      textShadow: `0 1px 1px rgba(0,32,27,0.2)`\n    },\n    aboutTextLarge: {\n      fontSize: '2.5rem',\n      marginTop: theme.spacing(6),\n    },\n    containerPadding: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    introContainer: {\n      backgroundColor: theme.palette.common.white,\n      padding: theme.spacing(4, 2, 4),\n    },\n    introContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    introText: {\n      color: theme.palette.text.secondary,\n      fontSize: '1.8rem',\n      fontWeight: 300,\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      textAlign: 'center'\n    },\n    introTextLarge: {\n      fontSize: '2.5rem'\n    }\n  })\n);\n\n/**\n * Retrieves the top level product categories.\n *\n * @return Array<string>\n */\nconst getTopLevelCategories: (\n  list: Array<Category>\n) => Array<string> = (\n  list: Array<Category>\n): Array<string> => {\n  const categories: Array<string> = [];\n\n  // Loop through the list of categories and add the top level items to the\n  // array.\n  let i: number = 0;\n\n  do {\n    const current: Category = list[i];\n    categories.push(current.key);\n    i++;\n  } while (i < list.length);\n\n  return categories;\n}\n\n\n/**\n * Home component.\n */\nconst Home: React.FC = () => {\n  // Define the component classes.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm')),\n        queries: Array<string> = getTopLevelCategories(categoryList); \n\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>ravebox</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <Grid\n        container\n        direction='column'\n      >\n        <Grid item xs={12} className={clsx(\n            classes.introContainer,\n            {\n              [classes.introContainerLarge]: largeScreen\n            }\n          )}\n        >\n          <Grid\n            container\n            direction='column'\n            alignItems='center'\n          >\n            <Grid item xs={12}>\n              <Logo\n                fullWidth={largeScreen ? '270px' : '200px'}\n                iconOnly={false}\n              /> \n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h1' className={clsx(\n                  classes.introText,\n                  {\n                    [classes.introTextLarge]: largeScreen\n                  }\n                )}\n              >\n                Everything reviewed in 2 minutes or less.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <LinkElement\n                path={'/product/add'}\n                styleType={StyleType.BUTTON_PRIMARY}\n                title='Post a rave'\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[0]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[0]]}\n              title={\n                <ListTitle\n                  title={`${categoryList[0].label} raves`}\n                  url={`/categories/${categoryList[0].key}`}\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[1]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[1]]}\n              title={\n                <ListTitle\n                  title={`${categoryList[1].label} raves`}\n                  url={`/categories/${categoryList[1].key}`}\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12} className={clsx(\n            classes.aboutContainer,\n            {\n              [classes.aboutContainerLarge]: largeScreen\n            }\n          )}\n        >\n          <Grid\n            container\n            direction='column'\n            alignItems='center'\n          >\n            <Grid item xs={12} md={9}>\n              <Typography variant='h2' className={clsx(\n                  classes.aboutText,\n                  {\n                    [classes.aboutTextLarge]: largeScreen\n                  }\n                )}\n              >\n                A way to discover products and share your experiences with the world.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <LinkElement\n                path={'/about'}\n                styleType={StyleType.BUTTON_SECONDARY_INVERSE}\n                title='About ravebox'\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[2]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[2]]}\n              title={\n                <ListTitle\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                  title={`${categoryList[2].label} raves`}\n                  url={`/categories/${categoryList[2].key}`}\n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[3]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[3]]}\n              title={\n                <ListTitle\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                  title={`${categoryList[3].label} raves`}\n                  url={`/categories/${categoryList[3].key}`}\n                />\n              }\n            />\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}