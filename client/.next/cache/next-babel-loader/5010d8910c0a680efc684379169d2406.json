{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/client/app/src/components/review/gridReviewList/GridReviewList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/**\n * GridReviewList.tsx\n * The structured list of reviews positioned in a grid.\n */\n// Modules.\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ReviewCard from '../../review/reviewCard/ReviewCard';\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum'; // Interfaces.\n\n/**\n * Create styles for the review lists.\n */\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    container: {\n      padding: theme.spacing(2, 0, 4),\n      flexWrap: 'nowrap'\n    },\n    divider: {\n      margin: theme.spacing(2)\n    },\n    listContainer: {\n      padding: theme.spacing(0, 2)\n    },\n    listElementSmall: {\n      borderBottom: \"6px solid rgba(0,0,0,0.05)\",\n      boxShadow: \"inset 0 -1px 0 rgba(0,0,0,0.1)\"\n    }\n  });\n});\n/**\n * Renders the grid review list.\n *\n * @param { GridReviewListProps } props - the review list properties.\n */\n\nvar GridReviewList = function GridReviewList(props) {\n  _s();\n\n  // Determine if we're need to load private reviews.\n  var classes = useStyles(),\n      theme = useTheme(),\n      largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, props.retrievalStatus === RetrievalStatus.SUCCESS ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.reviews.length > 0 ? __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, props.title && __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, props.title)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(_defineProperty({}, classes.listContainer, largeScreen)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, props.reviews.map(function (review) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      key: review._id,\n      className: clsx(_defineProperty({}, classes.listElementSmall, !largeScreen)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, __jsx(ReviewCard, _extends({}, review, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    })));\n  })))) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"No reviews found\")) : __jsx(LoadingReviewList, {\n    columns: 1,\n    height: 180,\n    count: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(GridReviewList, \"MRrdU1Lg6hU8h7MX5xb/KCw/gys=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = GridReviewList;\nexport default GridReviewList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridReviewList\");","map":{"version":3,"sources":["/client/app/src/components/review/gridReviewList/GridReviewList.tsx"],"names":["clsx","createStyles","makeStyles","useTheme","Grid","React","useMediaQuery","LoadingReviewList","ReviewCard","RetrievalStatus","useStyles","theme","container","padding","spacing","flexWrap","divider","margin","listContainer","listElementSmall","borderBottom","boxShadow","GridReviewList","props","classes","largeScreen","breakpoints","up","retrievalStatus","SUCCESS","reviews","length","title","map","review","_id"],"mappings":"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","sourcesContent":["/**\n * GridReviewList.tsx\n * The structured list of reviews positioned in a grid.\n */\n\n// Modules.\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Router from 'next/router';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router';\n\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ReviewCard from '../../review/reviewCard/ReviewCard';\nimport StyledButton from '../../elements/buttons/StyledButton';\n\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum';\n\n// Interfaces.\nimport { Review } from '../Review.interface';\nimport { GridReviewListProps } from './GridReviewList.interface';\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  container: {\n    padding: theme.spacing(2, 0, 4),\n    flexWrap: 'nowrap'\n  },\n  divider: {\n    margin: theme.spacing(2)\n  },\n  listContainer: {\n    padding: theme.spacing(0, 2)\n  },\n  listElementSmall: {\n    borderBottom: `6px solid rgba(0,0,0,0.05)`,\n    boxShadow: `inset 0 -1px 0 rgba(0,0,0,0.1)`\n  }\n}));\n\n/**\n * Renders the grid review list.\n *\n * @param { GridReviewListProps } props - the review list properties.\n */\nconst GridReviewList: React.FC<GridReviewListProps> = (props: GridReviewListProps) => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <React.Fragment>\n      {props.retrievalStatus === RetrievalStatus.SUCCESS ? (\n        <React.Fragment>\n          {props.reviews.length > 0 ? (\n            <Grid container direction='column' className={classes.container}>\n              <Grid item xs={12}>\n                {props.title &&\n                  <React.Fragment>\n                    {props.title}\n                  </React.Fragment>\n                }\n              </Grid>\n              <Grid item xs={12} className={clsx(\n                {\n                  [classes.listContainer]: largeScreen\n                })}\n              >\n                <Grid container direction='row' spacing={3}>\n                  {(props.reviews as Array<Review>).map((review: Review) => {\n                    return (\n                      <Grid item xs={12} sm={6} md={4} lg={3} key={review._id}\n                        className={clsx({\n                          [classes.listElementSmall]: !largeScreen\n                        })}\n                      >\n                        <ReviewCard\n                          {...review}\n                        />\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <React.Fragment>\n              No reviews found\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      ) : (\n        <LoadingReviewList columns={1} height={180} count={6} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default GridReviewList;\n"]},"metadata":{},"sourceType":"module"}