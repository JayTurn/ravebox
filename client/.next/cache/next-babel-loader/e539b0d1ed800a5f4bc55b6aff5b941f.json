{"ast":null,"code":"var _jsxFileName = \"/client/app/src/components/review/sidebarReviewList/SidebarReviewList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * SidebarReviewList.tsx\n * The structured list of reviews positioned in the sidebar.\n */\n// Modules.\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport { withRouter } from 'react-router'; // Components.\n\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport SidebarReviewCard from '../sidebarReviewCard/SidebarReviewCard';\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum'; // Interfaces.\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles(theme => createStyles({\n  divider: {\n    margin: theme.spacing(2)\n  },\n  listContainer: {\n    padding: theme.spacing(0)\n  },\n  listElement: {//margin: theme.spacing(0, 0, 2)\n  }\n}));\n/**\n * Renders the sidebar review list.\n *\n * @param { SidebarReviewListProps } props - the review list properties.\n */\n\nconst SidebarReviewList = props => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles();\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, props.retrievalStatus === RetrievalStatus.SUCCESS ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, props.reviews.length > 0 ? __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.listContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, props.title && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, props.title), props.reviews.map(review => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      key: review._id,\n      className: classes.listElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, __jsx(SidebarReviewCard, _extends({}, review, {\n      listType: props.listType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  }), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"No reviews found\")) : __jsx(LoadingReviewList, {\n    columns: 1,\n    height: 180,\n    count: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default withRouter(SidebarReviewList);","map":{"version":3,"sources":["/client/app/src/components/review/sidebarReviewList/SidebarReviewList.tsx"],"names":["createStyles","makeStyles","Divider","Grid","React","withRouter","LoadingReviewList","SidebarReviewCard","RetrievalStatus","useStyles","theme","divider","margin","spacing","listContainer","padding","listElement","SidebarReviewList","props","classes","retrievalStatus","SUCCESS","reviews","length","title","map","review","_id","listType"],"mappings":";;;;;AAAA;;;;AAKA;AAEA,SACEA,YADF,EAEEC,UAFF,QAKO,0BALP;AAMA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAGA;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CAEA;;AAIA;;;AAGA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,IAAkBV,YAAY,CAAC;AAC1DW,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADD,GADiD;AAI1DC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADI,GAJ2C;AAO1DG,EAAAA,WAAW,EAAE,CACX;AADW;AAP6C,CAAD,CAA/B,CAA5B;AAYA;;;;;;AAKA,MAAMC,iBAAmD,GAAIC,KAAD,IAAmC;AAC7F;AACA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,KAAK,CAACE,eAAN,KAA0BZ,eAAe,CAACa,OAA1C,GACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,OAAN,CAAcC,MAAd,GAAuB,CAAvB,GACC,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,SAAS,EAAEJ,OAAO,CAACL,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACM,KAAN,IACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACM,KADT,CAFJ,EAMIN,KAAK,CAACI,OAAP,CAAiCG,GAAjC,CAAsCC,MAAD,IAAoB;AACxD,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,GAAG,EAAEA,MAAM,CAACC,GAA/B;AACE,MAAA,SAAS,EAAER,OAAO,CAACH,WADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,iBAAD,eACMU,MADN;AAEE,MAAA,QAAQ,EAAER,KAAK,CAACU,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF,CADF;AAUD,GAXA,CANH,EAkBE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAET,OAAO,CAACR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADD,GAsBC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvBJ,CADD,GA8BC,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAE,CAA5B;AAA+B,IAAA,MAAM,EAAE,GAAvC;AAA4C,IAAA,KAAK,EAAE,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADF;AAoCD,CAxCD;;AA0CA,eAAeN,UAAU,CAACY,iBAAD,CAAzB","sourcesContent":["/**\n * SidebarReviewList.tsx\n * The structured list of reviews positioned in the sidebar.\n */\n\n// Modules.\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\n\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport SidebarReviewCard from '../sidebarReviewCard/SidebarReviewCard';\nimport StyledButton from '../../elements/buttons/StyledButton';\n\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum';\n\n// Interfaces.\nimport { Review } from '../Review.interface';\nimport { SidebarReviewListProps } from './SidebarReviewList.interface';\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  divider: {\n    margin: theme.spacing(2)\n  },\n  listContainer: {\n    padding: theme.spacing(0),\n  },\n  listElement: {\n    //margin: theme.spacing(0, 0, 2)\n  }\n}));\n\n/**\n * Renders the sidebar review list.\n *\n * @param { SidebarReviewListProps } props - the review list properties.\n */\nconst SidebarReviewList: React.FC<SidebarReviewListProps> = (props: SidebarReviewListProps) => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {props.retrievalStatus === RetrievalStatus.SUCCESS ? (\n        <React.Fragment>\n          {props.reviews.length > 0 ? (\n            <Grid container direction='column' className={classes.listContainer}>\n              {props.title &&\n                <React.Fragment>\n                  {props.title}\n                </React.Fragment>\n              }\n              {(props.reviews as Array<Review>).map((review: Review) => {\n                return (\n                  <Grid item xs={12} key={review._id}\n                    className={classes.listElement}\n                  >\n                    <SidebarReviewCard\n                      {...review}\n                      listType={props.listType}\n                    />\n                  </Grid>\n                );\n              })}\n              <Divider className={classes.divider}/>\n            </Grid>\n          ) : (\n            <React.Fragment>\n              No reviews found\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      ) : (\n        <LoadingReviewList columns={1} height={180} count={6} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(SidebarReviewList);\n"]},"metadata":{},"sourceType":"module"}