{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Documents/projects/ravebox/client/src/components/elements/listTitle/ListTitle.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * ListTitle.tsx\n * Renders the title above a list of content.\n */\n// Modules.\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport LinkElement from '../link/Link';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'; // Enumerators.\n\nimport { PresentationType } from '../../review/listByQuery/ListByQuery.enum'; // Interfaces.\n\n/**\n * Create styles for the list title.\n */\nconst useStyles = makeStyles(theme => createStyles({\n  titleContainer: {},\n  titleText: {\n    color: theme.palette.text.secondary,\n    fontSize: '.9rem',\n    fontWeight: 700,\n    margin: theme.spacing(0, 2, 3),\n    textTransform: 'uppercase'\n  },\n  gridTitle: {\n    color: theme.palette.primary.main,\n    fontSize: '1.15rem'\n  },\n  scrollableTitle: {\n    color: theme.palette.primary.main,\n    fontSize: '1rem',\n    marginTop: theme.spacing(2)\n  }\n}));\n/**\n * List title display component.\n */\n\nconst ListTitle = props => {\n  // Match the large media query size.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"flex-start\",\n    className: classes.titleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    className: clsx(classes.titleText, {\n      [classes.gridTitle]: props.presentationType === PresentationType.GRID,\n      [classes.scrollableTitle]: props.presentationType === PresentationType.SCROLLABLE\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, props.url ? __jsx(LinkElement, {\n    path: props.url,\n    title: props.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, props.title) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, props.title))));\n};\n\nexport default ListTitle;","map":{"version":3,"sources":["/Users/jay/Documents/projects/ravebox/client/src/components/elements/listTitle/ListTitle.tsx"],"names":["clsx","createStyles","makeStyles","useTheme","Grid","LinkElement","React","Typography","useMediaQuery","PresentationType","useStyles","theme","titleContainer","titleText","color","palette","text","secondary","fontSize","fontWeight","margin","spacing","textTransform","gridTitle","primary","main","scrollableTitle","marginTop","ListTitle","props","classes","largeScreen","breakpoints","up","presentationType","GRID","SCROLLABLE","url","title"],"mappings":"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","sourcesContent":["/**\n * ListTitle.tsx\n * Renders the title above a list of content.\n */\n\n// Modules.\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport LinkElement from '../link/Link';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Enumerators.\nimport { PresentationType } from '../../review/listByQuery/ListByQuery.enum';\n\n// Interfaces.\nimport { ListTitleProps } from './ListTitle.interface';\n\n/**\n * Create styles for the list title.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  titleContainer: {\n  },\n  titleText: {\n    color: theme.palette.text.secondary,\n    fontSize: '.9rem',\n    fontWeight: 700,\n    margin: theme.spacing(0, 2, 3),\n    textTransform: 'uppercase'\n  },\n  gridTitle: {\n    color: theme.palette.primary.main,\n    fontSize: '1.15rem',\n  },\n  scrollableTitle: {\n    color: theme.palette.primary.main,\n    fontSize: '1rem',\n    marginTop: theme.spacing(2)\n  }\n}));\n\n/**\n * List title display component.\n */\nconst ListTitle: React.FC<ListTitleProps> = (props: ListTitleProps) => {\n  // Match the large media query size.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <Grid\n      container\n      direction='column'\n      alignItems='flex-start'\n      className={classes.titleContainer}\n    >\n      <Grid item xs={12}>\n          <Typography variant='h3' className={clsx(\n            classes.titleText,\n            {\n              [classes.gridTitle]: props.presentationType === PresentationType.GRID,\n              [classes.scrollableTitle]: props.presentationType === PresentationType.SCROLLABLE\n            })}\n          >\n            {props.url ? (\n              <LinkElement path={props.url} title={props.title}> \n                {props.title}\n              </LinkElement>\n            ) : (\n              <React.Fragment>\n                {props.title}\n              </React.Fragment>\n            )}\n          </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ListTitle;\n"]},"metadata":{},"sourceType":"module"}