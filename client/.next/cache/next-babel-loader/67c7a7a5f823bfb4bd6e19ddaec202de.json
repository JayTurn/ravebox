{"ast":null,"code":"var _jsxFileName = \"/client/app/src/components/review/gridReviewList/GridReviewList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * GridReviewList.tsx\n * The structured list of reviews positioned in a grid.\n */\n// Modules.\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router'; // Components.\n\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ReviewCard from '../../review/reviewCard/ReviewCard';\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum'; // Interfaces.\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    padding: theme.spacing(2, 0, 4),\n    flexWrap: 'nowrap'\n  },\n  divider: {\n    margin: theme.spacing(2)\n  },\n  listContainer: {\n    padding: theme.spacing(0, 2)\n  },\n  listElementSmall: {\n    borderBottom: `6px solid rgba(0,0,0,0.05)`,\n    boxShadow: `inset 0 -1px 0 rgba(0,0,0,0.1)`\n  }\n}));\n/**\n * Renders the grid review list.\n *\n * @param { GridReviewListProps } props - the review list properties.\n */\n\nconst GridReviewList = props => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, props.retrievalStatus === RetrievalStatus.SUCCESS ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, props.reviews.length > 0 ? __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, props.title && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, props.title)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx({\n      [classes.listContainer]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, props.reviews.map(review => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      key: review._id,\n      className: clsx({\n        [classes.listElementSmall]: !largeScreen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, __jsx(ReviewCard, _extends({}, review, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    })));\n  })))) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"No reviews found\")) : __jsx(LoadingReviewList, {\n    columns: 1,\n    height: 180,\n    count: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default withRouter(GridReviewList);","map":{"version":3,"sources":["/client/app/src/components/review/gridReviewList/GridReviewList.tsx"],"names":["clsx","createStyles","makeStyles","useTheme","Grid","React","useMediaQuery","withRouter","LoadingReviewList","ReviewCard","RetrievalStatus","useStyles","theme","container","padding","spacing","flexWrap","divider","margin","listContainer","listElementSmall","borderBottom","boxShadow","GridReviewList","props","classes","largeScreen","breakpoints","up","retrievalStatus","SUCCESS","reviews","length","title","map","review","_id"],"mappings":"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","sourcesContent":["/**\n * GridReviewList.tsx\n * The structured list of reviews positioned in a grid.\n */\n\n// Modules.\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router';\n\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ReviewCard from '../../review/reviewCard/ReviewCard';\nimport StyledButton from '../../elements/buttons/StyledButton';\n\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum';\n\n// Interfaces.\nimport { Review } from '../Review.interface';\nimport { GridReviewListProps } from './GridReviewList.interface';\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  container: {\n    padding: theme.spacing(2, 0, 4),\n    flexWrap: 'nowrap'\n  },\n  divider: {\n    margin: theme.spacing(2)\n  },\n  listContainer: {\n    padding: theme.spacing(0, 2)\n  },\n  listElementSmall: {\n    borderBottom: `6px solid rgba(0,0,0,0.05)`,\n    boxShadow: `inset 0 -1px 0 rgba(0,0,0,0.1)`\n  }\n}));\n\n/**\n * Renders the grid review list.\n *\n * @param { GridReviewListProps } props - the review list properties.\n */\nconst GridReviewList: React.FC<GridReviewListProps> = (props: GridReviewListProps) => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <React.Fragment>\n      {props.retrievalStatus === RetrievalStatus.SUCCESS ? (\n        <React.Fragment>\n          {props.reviews.length > 0 ? (\n            <Grid container direction='column' className={classes.container}>\n              <Grid item xs={12}>\n                {props.title &&\n                  <React.Fragment>\n                    {props.title}\n                  </React.Fragment>\n                }\n              </Grid>\n              <Grid item xs={12} className={clsx(\n                {\n                  [classes.listContainer]: largeScreen\n                })}\n              >\n                <Grid container direction='row' spacing={3}>\n                  {(props.reviews as Array<Review>).map((review: Review) => {\n                    return (\n                      <Grid item xs={12} sm={6} md={4} lg={3} key={review._id}\n                        className={clsx({\n                          [classes.listElementSmall]: !largeScreen\n                        })}\n                      >\n                        <ReviewCard\n                          {...review}\n                        />\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <React.Fragment>\n              No reviews found\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      ) : (\n        <LoadingReviewList columns={1} height={180} count={6} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(GridReviewList);\n"]},"metadata":{},"sourceType":"module"}