{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/client/app/src/components/review/scrollableReviewList/ScrollableReviewList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/**\n * ScrollableReviewList.tsx\n * The structured list of reviews positioned in the sidebar.\n */\n// Modules.\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport * as React from 'react';\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ScrollableReviewCard from '../scrollableReviewCard/ScrollableReviewCard';\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum'; // Interfaces.\n\n/**\n * Create styles for the review lists.\n */\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    listContainer: {\n      width: '800px',\n      padding: theme.spacing(0) //flexWrap: 'nowrap'\n\n    },\n    listElement: {\n      cursor: 'pointer',\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(0, 1),\n      '&:focus': {\n        outline: 'none'\n      },\n      '&:first-child': {\n        paddingLeft: theme.spacing(2)\n      },\n      '&:last-child': {\n        paddingRight: theme.spacing(2)\n      }\n    }\n  });\n});\n/**\n * Renders the sidebar review list.\n *\n * @param { ScrollableReviewListProps } props - the review list properties.\n */\n\nvar ScrollableReviewList = function ScrollableReviewList(props) {\n  _s();\n\n  // Determine if we're need to load private reviews.\n  var classes = useStyles();\n\n  var navigate = function navigate(path) {\n    if (path) {//props.history.push(`/review/${path}`);\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, props.title && __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.title), props.retrievalStatus === RetrievalStatus.SUCCESS ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, props.reviews.length > 0 ? __jsx(ScrollMenu, {\n    alignCenter: false,\n    data: props.reviews.map(function (review, index) {\n      return __jsx(ScrollableReviewCard, _extends({}, review, {\n        key: review.url,\n        listType: props.listType,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }));\n    }),\n    inertiaScrolling: true,\n    inertiaScrollingSlowdown: .75,\n    itemClass: classes.listElement,\n    onSelect: navigate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"No reviews found\")) : __jsx(LoadingReviewList, {\n    columns: 1,\n    height: 180,\n    count: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(ScrollableReviewList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ScrollableReviewList;\nScrollableReviewList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableReviewList\");","map":{"version":3,"sources":["/client/app/src/components/review/scrollableReviewList/ScrollableReviewList.tsx"],"names":["createStyles","makeStyles","ScrollMenu","React","LoadingReviewList","ScrollableReviewCard","RetrievalStatus","useStyles","theme","listContainer","width","padding","spacing","listElement","cursor","marginBottom","outline","paddingLeft","paddingRight","ScrollableReviewList","props","classes","navigate","path","title","retrievalStatus","SUCCESS","reviews","length","map","review","index","url","listType"],"mappings":"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","sourcesContent":["/**\n * ScrollableReviewList.tsx\n * The structured list of reviews positioned in the sidebar.\n */\n\n// Modules.\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\n\n// Components.\nimport LoadingReviewList from '../../elements/loadingReviewList/LoadingReviewList';\nimport ScrollableReviewCard from '../scrollableReviewCard/ScrollableReviewCard';\nimport StyledButton from '../../elements/buttons/StyledButton';\n\n// Enumerators.\nimport { RetrievalStatus } from '../../../utils/api/Api.enum';\n\n// Interfaces.\nimport { Review } from '../Review.interface';\nimport { ScrollableReviewListProps } from './ScrollableReviewList.interface';\n\n/**\n * Create styles for the review lists.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  listContainer: {\n    width: '800px',\n    padding: theme.spacing(0),\n    //flexWrap: 'nowrap'\n  },\n  listElement: {\n    cursor: 'pointer',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(0, 1),\n    '&:focus': {\n      outline: 'none'\n    },\n    '&:first-child': {\n      paddingLeft: theme.spacing(2)\n    },\n    '&:last-child': {\n      paddingRight: theme.spacing(2)\n    }\n  }\n}));\n\n/**\n * Renders the sidebar review list.\n *\n * @param { ScrollableReviewListProps } props - the review list properties.\n */\nconst ScrollableReviewList: React.FC<ScrollableReviewListProps> = (props: ScrollableReviewListProps) => {\n  // Determine if we're need to load private reviews.\n  const classes = useStyles();\n\n  const navigate:(\n    path: string | number | null\n  ) => void = (\n    path: string | number | null\n  ): void => {\n    if (path) {\n      //props.history.push(`/review/${path}`);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {props.title &&\n        <React.Fragment>\n          {props.title}\n        </React.Fragment>\n      }\n      {props.retrievalStatus === RetrievalStatus.SUCCESS ? (\n        <React.Fragment>\n          {props.reviews.length > 0 ? (\n            <ScrollMenu\n              alignCenter={false}\n              data={(props.reviews as Array<Review>).map((review: Review, index: number) => {\n                return (\n                  <ScrollableReviewCard\n                    {...review}\n                    key={review.url}\n                    listType={props.listType}\n                  />\n                )})\n              }\n              inertiaScrolling={true}\n              inertiaScrollingSlowdown={.75}\n              itemClass={classes.listElement}\n              onSelect={navigate}\n            />\n          ) : (\n            <React.Fragment>\n              No reviews found\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      ) : (\n        <LoadingReviewList columns={1} height={180} count={6} />\n      )}\n    </React.Fragment>\n  );\n}\n\nScrollableReviewList;\n"]},"metadata":{},"sourceType":"module"}