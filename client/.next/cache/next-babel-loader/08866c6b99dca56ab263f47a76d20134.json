{"ast":null,"code":"var _jsxFileName = \"/client/app/src/components/review/reviewCard/ReviewCard.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * ReviewCard.tsx\n * Card display of the review.\n */\n// Modules.\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from 'next/link';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'; // Components.\n\n/**\n * Card header styles.\n */\nconst StyledCardHeader = withStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  content: {\n    maxWidth: '100%'\n  },\n  title: {\n    maxWidth: '100%'\n  }\n}))(CardHeader);\n/**\n * Create the theme styles to be used for the display.\n */\n\nconst useStyles = makeStyles(theme => createStyles({\n  brandText: {\n    display: 'block',\n    fontSize: '.9rem',\n    fontWeight: 500\n  },\n  cardContainer: {\n    backgroundColor: 'transparent',\n    borderRadius: 0,\n    boxShadow: 'none',\n    padding: theme.spacing(2, 0)\n  },\n  cardContainerLarge: {\n    padding: 0\n  },\n  cardHeaderContent: {\n    marginBottom: theme.spacing(1),\n    maxWidth: '100%',\n    padding: theme.spacing(0, 2)\n  },\n  cardHeaderContentLarge: {\n    padding: 0\n  },\n  divider: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  handleText: {\n    display: 'block',\n    fontSize: '.7rem',\n    fontWeight: 700\n  },\n  linkText: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none'\n  },\n  media: {\n    height: 180\n  },\n  menuIcon: {\n    paddingRight: 0,\n    paddingBottom: 0,\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  productNameSpan: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  },\n  productNameText: {\n    fontSize: '1.02rem',\n    fontWeight: 500,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  reviewLinkButton: {\n    border: `1px solid ${theme.palette.secondary.light}`,\n    padding: 4,\n    '&:hover': {\n      backgroundColor: 'rgba(8, 203, 175, 0.1)'\n    }\n  },\n  reviewLinkIcon: {\n    fontSize: 30\n  },\n  textContent: {\n    //borderLeft: `3px solid ${theme.palette.secondary.main}`,\n    padding: theme.spacing(2),\n    '&:last-child': {\n      paddingBottom: theme.spacing(1)\n    }\n  },\n  textContentLarge: {\n    padding: theme.spacing(2, 0)\n  },\n  title: {\n    fontSize: '1rem',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }\n}));\n/**\n * Review card for public display.\n */\n\nconst ReviewCard = props => {\n  // Define the style classes.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n  return __jsx(Card, {\n    className: clsx(classes.cardContainer, {\n      [classes.cardContainerLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, __jsx(StyledCardHeader, {\n    className: clsx(classes.cardHeaderContent, {\n      [classes.cardHeaderContentLarge]: largeScreen\n    }),\n    style: {\n      maxWidth: '100%'\n    },\n    title: __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      style: {\n        flexWrap: 'nowrap',\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, __jsx(Grid, {\n      item: true,\n      style: {\n        flexGrow: 1,\n        minWidth: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"review/[brand]/[productName]/[reviewTitle]\",\n      as: `/review/${props.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      component: \"span\",\n      className: classes.linkText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, props.user && __jsx(Typography, {\n      variant: \"body2\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, __jsx(Box, {\n      component: \"span\",\n      className: classes.handleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, props.user.handle), \" \", props.title)))), __jsx(Grid, {\n      item: true,\n      style: {\n        flexGrow: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    href: \"review/[brand]/[productName]/[reviewTitle]\",\n    as: `/review/${props.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(CardMedia, {\n    className: clsx(classes.media),\n    image: props.thumbnailURL,\n    src: \"/images/placeholder.png\",\n    title: `${props.product ? props.product.name : ''} review`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })), __jsx(CardContent, {\n    className: clsx(classes.textContent, {\n      [classes.textContentLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      flexWrap: 'nowrap',\n      maxWidth: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, props.product && __jsx(Grid, {\n    item: true,\n    style: {\n      flexGrow: 1,\n      minWidth: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"review/[brand]/[productName]/[reviewTitle]\",\n    as: `/review/${props.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    className: classes.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    className: classes.productNameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    className: classes.brandText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, props.product.brand), \" \", props.product.name)))), __jsx(Grid, {\n    item: true,\n    style: {\n      flexGrow: 0,\n      marginLeft: theme.spacing(1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"review/[brand]/[productName]/[reviewTitle]\",\n    as: `/review/${props.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    className: classes.reviewLinkButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, __jsx(PlayArrowRoundedIcon, {\n    color: \"secondary\",\n    className: classes.reviewLinkIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default ReviewCard;","map":{"version":3,"sources":["/client/app/src/components/review/reviewCard/ReviewCard.tsx"],"names":["React","Box","Card","CardContent","CardHeader","CardMedia","clsx","createStyles","makeStyles","useTheme","withStyles","Grid","IconButton","Link","PlayArrowRoundedIcon","Typography","useMediaQuery","StyledCardHeader","theme","root","maxWidth","content","title","useStyles","brandText","display","fontSize","fontWeight","cardContainer","backgroundColor","borderRadius","boxShadow","padding","spacing","cardContainerLarge","cardHeaderContent","marginBottom","cardHeaderContentLarge","divider","marginTop","handleText","linkText","color","palette","text","primary","textDecoration","media","height","menuIcon","paddingRight","paddingBottom","productNameSpan","textOverflow","overflow","productNameText","whiteSpace","reviewLinkButton","border","secondary","light","reviewLinkIcon","textContent","textContentLarge","ReviewCard","props","classes","largeScreen","breakpoints","up","flexWrap","flexGrow","minWidth","url","user","handle","thumbnailURL","product","name","brand","marginLeft"],"mappings":"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","sourcesContent":["/**\n * ReviewCard.tsx\n * Card display of the review.\n */\n\n// Modules.\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from 'next/link';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Components.\nimport LinkElement from '../../elements/link/Link';\n\n// Interfaces.\nimport { ReviewCardProps } from './ReviewCard.interface';\n\n/**\n * Card header styles.\n */\nconst StyledCardHeader = withStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  content: {\n    maxWidth: '100%'\n  },\n  title: {\n    maxWidth: '100%'\n  }\n}))(CardHeader);\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    brandText: {\n      display: 'block',\n      fontSize: '.9rem',\n      fontWeight: 500\n    },\n    cardContainer: {\n      backgroundColor: 'transparent',\n      borderRadius: 0,\n      boxShadow: 'none',\n      padding: theme.spacing(2, 0)\n    },\n    cardContainerLarge: {\n      padding: 0\n    },\n    cardHeaderContent: {\n      marginBottom: theme.spacing(1),\n      maxWidth: '100%',\n      padding: theme.spacing(0, 2)\n    },\n    cardHeaderContentLarge: {\n      padding: 0\n    },\n    divider: {\n      marginBottom: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    },\n    handleText: {\n      display: 'block',\n      fontSize: '.7rem',\n      fontWeight: 700,\n    },\n    linkText: {\n      color: theme.palette.text.primary,\n      textDecoration: 'none'\n    },\n    media: {\n      height: 180\n    },\n    menuIcon: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    productNameSpan: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    productNameText: {\n      fontSize: '1.02rem',\n      fontWeight: 500,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    reviewLinkButton: {\n      border: `1px solid ${theme.palette.secondary.light}`,\n      padding: 4,\n      '&:hover': {\n        backgroundColor: 'rgba(8, 203, 175, 0.1)'\n      }\n    },\n    reviewLinkIcon: {\n      fontSize: 30\n    },\n    textContent: {\n      //borderLeft: `3px solid ${theme.palette.secondary.main}`,\n      padding: theme.spacing(2),\n      '&:last-child': {\n        paddingBottom: theme.spacing(1),\n      }\n    },\n    textContentLarge: {\n      padding: theme.spacing(2, 0)\n    },\n    title: {\n      fontSize: '1rem',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }),\n);\n\n/**\n * Review card for public display.\n */\nconst ReviewCard: React.FC<ReviewCardProps> = (props: ReviewCardProps) => {\n  // Define the style classes.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm'));\n\n  return (\n    <Card className={clsx(\n      classes.cardContainer,\n      {\n        [classes.cardContainerLarge]: largeScreen\n      }\n      )}\n    >\n      <StyledCardHeader\n        className={clsx(classes.cardHeaderContent, {\n          [classes.cardHeaderContentLarge]: largeScreen\n        })}\n        style={{maxWidth: '100%'}}\n        title={\n          <Grid container direction='row' style={{flexWrap: 'nowrap', maxWidth: '100%'}}>\n            <Grid item style={{flexGrow: 1, minWidth: 0}}>\n              <Link href='review/[brand]/[productName]/[reviewTitle]' as={`/review/${props.url}`}>\n                <Box component='span' className={classes.linkText}>\n                  {props.user &&\n                    <Typography variant='body2' className={classes.title}>\n                      <Box component='span' className={classes.handleText}>{props.user.handle}</Box> {props.title} \n                    </Typography>\n                  }\n                </Box>\n              </Link>\n            </Grid>\n            <Grid item style={{flexGrow: 0}}>\n            </Grid>\n          </Grid>\n        }\n      />\n      <Link href='review/[brand]/[productName]/[reviewTitle]' as={`/review/${props.url}`}>\n        <CardMedia\n          className={clsx(classes.media)}\n          image={props.thumbnailURL}\n          src='/images/placeholder.png'\n          title={`${props.product ? props.product.name : ''} review`}\n        />\n      </Link>\n      <CardContent className={clsx(classes.textContent, {\n          [classes.textContentLarge]: largeScreen\n        })}\n      >\n        <Grid container direction='row' style={{flexWrap: 'nowrap', maxWidth: '100%'}}>\n          {props.product &&\n            <Grid item style={{flexGrow: 1, minWidth: 0}}>\n              <Link href='review/[brand]/[productName]/[reviewTitle]' as={`/review/${props.url}`}>\n                <Box component='span' className={classes.linkText}>\n                  <Typography variant='body2' className={classes.productNameText}>\n                    <Box component='span' className={classes.brandText}>{props.product.brand}</Box> {props.product.name}\n                  </Typography>\n                </Box>\n              </Link>\n            </Grid>\n          }\n          <Grid item style={{flexGrow: 0, marginLeft: theme.spacing(1)}}>\n            <Link href='review/[brand]/[productName]/[reviewTitle]' as={`/review/${props.url}`}>\n              <IconButton className={classes.reviewLinkButton}>\n                <PlayArrowRoundedIcon color='secondary' className={classes.reviewLinkIcon} />\n              </IconButton>\n            </Link>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ReviewCard;\n"]},"metadata":{},"sourceType":"module"}