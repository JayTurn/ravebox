{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Documents/projects/ravebox/client/src/components/review/sidebarReviewCard/SidebarReviewCard.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * SidebarReviewCard.tsx\n * Card display of the review positioned in the sidebar.\n */\n// Modules.\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { NavLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n// Enumerators.\nimport { ReviewListType } from '../listByQuery/ListByQuery.enum'; // Interfaces.\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles(theme => createStyles({\n  analyticText: {\n    fontSize: '.9rem',\n    fontWeight: 500\n  },\n  brandText: {\n    display: 'block',\n    fontSize: '.9rem',\n    fontWeight: 500\n  },\n  cardContainer: {\n    borderRadius: 0,\n    boxShadow: 'none',\n    backgroundColor: 'transparent'\n  },\n  cardHeaderContent: {\n    marginBottom: theme.spacing(1),\n    maxWidth: '100%',\n    padding: theme.spacing(0, 0, 0, 1)\n  },\n  cardHeaderContentLarge: {\n    padding: 0\n  },\n  contentContainer: {},\n  flexContainer: {\n    alignItems: 'flex-start',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(1, 2),\n    textDecoration: 'none',\n    '&:hover': {\n      backgroundColor: `rgba(0,0,0,0.03)`\n    }\n  },\n  mediaContainer: {\n    width: `100%`,\n    maxWidth: 170,\n    minWidth: 170,\n    height: 'calc(100% * 0.56)',\n    overflow: 'hidden'\n  },\n  divider: {\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(1)\n  },\n  handleText: {\n    display: 'block',\n    fontSize: '.8rem',\n    fontWeight: 500,\n    marginTop: theme.spacing(1)\n  },\n  linkText: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none'\n  },\n  media: {\n    height: 140\n  },\n  menuIcon: {\n    paddingRight: 0,\n    paddingBottom: 0,\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  productNameSpan: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  },\n  productNameText: {\n    fontSize: '1.02rem',\n    fontWeight: 500,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  textContent: {\n    //borderLeft: `3px solid ${theme.palette.secondary.main}`,\n    padding: theme.spacing(2),\n    '&:last-child': {\n      paddingBottom: theme.spacing(1)\n    }\n  },\n  textContentLarge: {\n    padding: theme.spacing(2, 0)\n  },\n  titleText: {\n    fontSize: '.9rem',\n    lineHeight: '1rem',\n    fontWeight: 700,\n    display: `-webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 2`,\n    maxHeight: '2rem',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'normal'\n  }\n}));\n/**\n * Card header styles.\n */\n\nconst StyledCardHeader = withStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  content: {\n    maxWidth: '100%'\n  },\n  title: {\n    maxWidth: '100%'\n  }\n}))(CardHeader);\n/**\n * Review card for public display.\n */\n\nconst SidebarReviewCard = props => {\n  // Define the style classes.\n  const classes = useStyles(),\n        theme = useTheme();\n  return __jsx(Card, {\n    className: classes.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, __jsx(NavLink, {\n    to: `/review/${props.url}`,\n    className: classes.flexContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: classes.mediaContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(CardMedia, {\n    className: clsx(classes.media),\n    image: props.thumbnailURL,\n    src: \"/images/placeholder.png\",\n    title: `${props.product ? props.product.name : ''} review`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })), __jsx(Box, {\n    className: classes.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(StyledCardHeader, {\n    className: clsx(classes.cardHeaderContent),\n    style: {\n      maxWidth: '100%'\n    },\n    title: __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      item: true,\n      style: {\n        minWidth: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      className: classes.titleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, props.title)), props.user && __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      className: classes.handleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, props.user.handle))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), props.listType !== ReviewListType.PRODUCT && __jsx(CardContent, {\n    className: clsx(classes.textContent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      flexWrap: 'nowrap',\n      maxWidth: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, props.product && __jsx(Grid, {\n    item: true,\n    style: {\n      flexGrow: 1,\n      minWidth: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    className: classes.productNameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    className: classes.brandText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, props.product.brand), \" \", props.product.name))))));\n};\n\nexport default SidebarReviewCard;","map":{"version":3,"sources":["/Users/jay/Documents/projects/ravebox/client/src/components/review/sidebarReviewCard/SidebarReviewCard.tsx"],"names":["React","Box","Card","CardContent","CardHeader","CardMedia","clsx","createStyles","makeStyles","useTheme","withStyles","Grid","NavLink","Typography","ReviewListType","useStyles","theme","analyticText","fontSize","fontWeight","brandText","display","cardContainer","borderRadius","boxShadow","backgroundColor","cardHeaderContent","marginBottom","spacing","maxWidth","padding","cardHeaderContentLarge","contentContainer","flexContainer","alignItems","justifyContent","textDecoration","mediaContainer","width","minWidth","height","overflow","divider","marginTop","handleText","linkText","color","palette","text","primary","media","menuIcon","paddingRight","paddingBottom","productNameSpan","textOverflow","productNameText","whiteSpace","textContent","textContentLarge","titleText","lineHeight","maxHeight","StyledCardHeader","root","content","title","SidebarReviewCard","props","classes","url","thumbnailURL","product","name","user","handle","listType","PRODUCT","flexWrap","flexGrow","brand"],"mappings":"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","sourcesContent":["/**\n * SidebarReviewCard.tsx\n * Card display of the review positioned in the sidebar.\n */\n\n// Modules.\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { NavLink } from 'react-router-dom';\nimport PlayArrowRoundedIcon from '@material-ui/icons/PlayArrowRounded';\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Components.\nimport LinkElement from '../../elements/link/Link';\n\n// Enumerators.\nimport { ReviewListType } from '../listByQuery/ListByQuery.enum';\n\n// Interfaces.\nimport { SidebarReviewCardProps } from './SidebarReviewCard.interface';\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    analyticText: {\n      fontSize: '.9rem',\n      fontWeight: 500,\n    },\n    brandText: {\n      display: 'block',\n      fontSize: '.9rem',\n      fontWeight: 500\n    },\n    cardContainer: {\n      borderRadius: 0,\n      boxShadow: 'none',\n      backgroundColor: 'transparent'\n    },\n    cardHeaderContent: {\n      marginBottom: theme.spacing(1),\n      maxWidth: '100%',\n      padding: theme.spacing(0, 0, 0, 1)\n    },\n    cardHeaderContentLarge: {\n      padding: 0\n    },\n    contentContainer: {\n    },\n    flexContainer: {\n      alignItems: 'flex-start',\n      display: 'flex',\n      justifyContent: 'flex-start',\n      padding: theme.spacing(1, 2),\n      textDecoration: 'none',\n      '&:hover': {\n        backgroundColor: `rgba(0,0,0,0.03)`\n      }\n    },\n    mediaContainer: {\n      width: `100%`,\n      maxWidth: 170,\n      minWidth: 170,\n      height: 'calc(100% * 0.56)',\n      overflow: 'hidden'\n    },\n    divider: {\n      marginBottom: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    },\n    handleText: {\n      display: 'block',\n      fontSize: '.8rem',\n      fontWeight: 500,\n      marginTop: theme.spacing(1)\n    },\n    linkText: {\n      color: theme.palette.text.primary,\n      textDecoration: 'none'\n    },\n    media: {\n      height: 140\n    },\n    menuIcon: {\n      paddingRight: 0,\n      paddingBottom: 0,\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    productNameSpan: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    productNameText: {\n      fontSize: '1.02rem',\n      fontWeight: 500,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    textContent: {\n      //borderLeft: `3px solid ${theme.palette.secondary.main}`,\n      padding: theme.spacing(2),\n      '&:last-child': {\n        paddingBottom: theme.spacing(1),\n      }\n    },\n    textContentLarge: {\n      padding: theme.spacing(2, 0)\n    },\n    titleText: {\n      fontSize: '.9rem',\n      lineHeight: '1rem',\n      fontWeight: 700,\n      display: `-webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 2`,\n      maxHeight: '2rem',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'normal',\n    }\n  }),\n);\n\n/**\n * Card header styles.\n */\nconst StyledCardHeader = withStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  content: {\n    maxWidth: '100%'\n  },\n  title: {\n    maxWidth: '100%'\n  }\n}))(CardHeader);\n\n/**\n * Review card for public display.\n */\nconst SidebarReviewCard: React.FC<SidebarReviewCardProps> = (props: SidebarReviewCardProps) => {\n  // Define the style classes.\n  const classes = useStyles(),\n        theme = useTheme()\n\n  return (\n    <Card className={classes.cardContainer}>\n      <NavLink to={`/review/${props.url}`} className={classes.flexContainer}>\n        <Box className={classes.mediaContainer}>\n          <CardMedia\n            className={clsx(classes.media)}\n            image={props.thumbnailURL}\n            src='/images/placeholder.png'\n            title={`${props.product ? props.product.name : ''} review`}\n          />\n        </Box>\n        <Box className={classes.contentContainer}>\n          <StyledCardHeader\n            className={clsx(classes.cardHeaderContent)}\n            style={{maxWidth: '100%'}}\n            title={\n              <Grid container direction='column'>\n                <Grid item style={{minWidth: 0}}>\n                  <Typography variant='body1' className={classes.titleText}>\n                    {props.title} \n                  </Typography>\n                </Grid>\n                {props.user &&\n                  <Grid item>\n                    <Typography variant='body1' className={classes.handleText}>\n                      {props.user.handle} \n                    </Typography>\n                  </Grid>\n                }\n              </Grid>\n            }\n          />\n        </Box>\n        {props.listType !== ReviewListType.PRODUCT &&\n          <CardContent className={clsx(classes.textContent)}\n          >\n            <Grid container direction='row' style={{flexWrap: 'nowrap', maxWidth: '100%'}}>\n              {props.product &&\n                <Grid item style={{flexGrow: 1, minWidth: 0}}>\n                  <Typography variant='body2' className={classes.productNameText}>\n                    <Box component='span' className={classes.brandText}>{props.product.brand}</Box> {props.product.name}\n                  </Typography>\n                </Grid>\n              }\n            </Grid>\n          </CardContent>\n        }\n      </NavLink>\n    </Card>\n  );\n}\n\nexport default SidebarReviewCard;\n"]},"metadata":{},"sourceType":"module"}