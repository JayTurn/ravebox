{"ast":null,"code":"var _jsxFileName = \"/client/app/src/components/elements/loadingReviewList/LoadingReviewList.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * LoadingReviewList.tsx\n * Placeholder for a list of loading review cards.\n */\n// Modules.\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'; // Interfaces.\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles(theme => createStyles({\n  text: {\n    marginTop: theme.spacing(1)\n  }\n}));\n/**\n * Creates a numerical array using the count value provided.\n *\n * @param { number } count - the number of array items to create.\n */\n\nconst createItems = count => {\n  let i = 0;\n  const items = [];\n\n  do {\n    items.push(i);\n    i++;\n  } while (i < count);\n\n  return items;\n};\n/**\n * Loading display for a list of reviews.\n */\n\n\nconst LoadingReviewList = props => {\n  // Define the style classes.\n  const classes = useStyles(); // Create an array of placeholders to display.\n\n  const items = createItems(props.count);\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, items.map(item => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      lg: 4,\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(Skeleton, {\n      variant: \"rect\",\n      width: \"100%\",\n      height: 280,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), __jsx(Skeleton, {\n      className: classes.text,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(Skeleton, {\n      width: \"60%\",\n      className: classes.text,\n      height: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }));\n  }));\n};\n\nexport default LoadingReviewList;","map":{"version":3,"sources":["/client/app/src/components/elements/loadingReviewList/LoadingReviewList.tsx"],"names":["Grid","React","Skeleton","createStyles","makeStyles","useStyles","theme","text","marginTop","spacing","createItems","count","i","items","push","LoadingReviewList","props","classes","map","item"],"mappings":";;;AAAA;;;;AAKA;AAEA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,YAAT,EAA8BC,UAA9B,QAAgD,0BAAhD,C,CAEA;;AAGA;;;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,IAC3BH,YAAY,CAAC;AACXI,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP;AADK,CAAD,CADc,CAA5B;AAQA;;;;;;AAKA,MAAMC,WAEY,GAChBC,KADmB,IAED;AAElB,MAAIC,CAAS,GAAG,CAAhB;AAEA,QAAMC,KAAoB,GAAG,EAA7B;;AAEA,KAAG;AACDA,IAAAA,KAAK,CAACC,IAAN,CAAWF,CAAX;AACAA,IAAAA,CAAC;AACF,GAHD,QAGSA,CAAC,GAAGD,KAHb;;AAKA,SAAOE,KAAP;AACD,CAhBD;AAkBA;;;;;AAGA,MAAME,iBAAmD,GAAIC,KAAD,IAAmC;AAC7F;AACA,QAAMC,OAAO,GAAGZ,SAAS,EAAzB,CAF6F,CAI7F;;AACA,QAAMQ,KAAoB,GAAGH,WAAW,CAACM,KAAK,CAACL,KAAP,CAAxC;AAEA,SACE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAE,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAkB;AAC3B,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,GAAG,EAAEA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,OAAO,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAC,MAA/B;AAAsC,MAAA,MAAM,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,QAAD;AAAU,MAAA,SAAS,EAAEF,OAAO,CAACV,IAA7B;AAAmC,MAAA,MAAM,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,SAAS,EAAEU,OAAO,CAACV,IAAzC;AAA+C,MAAA,MAAM,EAAE,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD,GARA,CALH,CADF;AAiBD,CAxBD;;AA0BA,eAAeQ,iBAAf","sourcesContent":["/**\n * LoadingReviewList.tsx\n * Placeholder for a list of loading review cards.\n */\n\n// Modules.\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n// Interfaces.\nimport { LoadingReviewListProps } from './LoadingReviewList.interface';\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    text: {\n      marginTop: theme.spacing(1),\n    }\n  }),\n);\n\n/**\n * Creates a numerical array using the count value provided.\n *\n * @param { number } count - the number of array items to create.\n */\nconst createItems: (\n  count: number\n) => Array<number> = (\n  count: number\n): Array<number> => {\n\n  let i: number = 0;\n\n  const items: Array<number> = [];\n\n  do {\n    items.push(i);\n    i++;\n  } while (i < count);\n\n  return items;\n}\n\n/**\n * Loading display for a list of reviews.\n */\nconst LoadingReviewList: React.FC<LoadingReviewListProps> = (props: LoadingReviewListProps) => {\n  // Define the style classes.\n  const classes = useStyles();\n\n  // Create an array of placeholders to display.\n  const items: Array<number> = createItems(props.count); \n\n  return (\n    <Grid\n      container\n      direction='row'\n      spacing={3}\n    >\n      {items.map((item: number) => {\n        return (\n          <Grid item xs={12} lg={4} key={item}>\n            <Skeleton variant='rect' width='100%' height={280} />\n            <Skeleton className={classes.text} height={20} />\n            <Skeleton width='60%' className={classes.text} height={20} />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default LoadingReviewList;\n"]},"metadata":{},"sourceType":"module"}