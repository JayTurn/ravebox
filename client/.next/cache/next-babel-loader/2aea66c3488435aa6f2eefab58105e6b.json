{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Documents/projects/ravebox/client/pages/index.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * index.tsx\n * Home screen.\n */\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Head from 'next/head';\nimport * as React from 'react';\nimport LinkElement from '../src/components/elements/link/Link';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n// Components.\nimport Logo from '../src/components/logo/Logo';\nimport ListByQuery from '../src/components/review/listByQuery/ListByQuery';\nimport ListTitle from '../src/components/elements/listTitle/ListTitle';\nimport ListByQueryRequest from './api/ListByQuery/ListByQuery.api'; // Enumerators.\n\nimport { PresentationType, ReviewListType } from '../src/components/review/listByQuery/ListByQuery.enum';\nimport { StyleType } from '../src/components/elements/link/Link.enum'; // Interfaces.\n\n// Retrieve the list of categories.\nconst categoryList = require('../src/components/category/categories.json').ontology;\n/**\n * Create the theme styles to be used for the display.\n */\n\n\nconst useStyles = makeStyles(theme => createStyles({\n  aboutContainer: {\n    backgroundColor: theme.palette.secondary.dark,\n    padding: theme.spacing(6, 2)\n  },\n  aboutContainerLarge: {\n    padding: theme.spacing(8, 2, 12)\n  },\n  aboutText: {\n    color: theme.palette.common.white,\n    fontSize: '1.8rem',\n    fontWeight: 400,\n    marginBottom: theme.spacing(6),\n    marginTop: theme.spacing(0),\n    textAlign: 'center',\n    textShadow: `0 1px 1px rgba(0,32,27,0.2)`\n  },\n  aboutTextLarge: {\n    fontSize: '2.5rem',\n    marginTop: theme.spacing(6)\n  },\n  containerPadding: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  introContainer: {\n    backgroundColor: theme.palette.common.white,\n    padding: theme.spacing(4, 2, 4)\n  },\n  introContainerLarge: {\n    padding: theme.spacing(8, 2, 12)\n  },\n  introText: {\n    color: theme.palette.text.secondary,\n    fontSize: '1.8rem',\n    fontWeight: 300,\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n    textAlign: 'center'\n  },\n  introTextLarge: {\n    fontSize: '2.5rem'\n  }\n}));\n/**\n * Retrieves the top level product categories.\n *\n * @return Array<string>\n */\n\nconst getTopLevelCategories = list => {\n  const categories = []; // Loop through the list of categories and add the top level items to the\n  // array.\n\n  let i = 0;\n\n  do {\n    const current = list[i];\n    categories.push(current.key);\n    i++;\n  } while (i < list.length);\n\n  return categories;\n};\n/**\n * Server-side request handling.\n */\n\n\nexport async function getServerSideProps() {\n  const queries = getTopLevelCategories(categoryList);\n  const reviewGroup = await ListByQueryRequest({\n    listType: ReviewListType.CATEGORY,\n    queries: queries\n  });\n  console.log(reviewGroup);\n  return {\n    props: {\n      reviewGroup: reviewGroup.reviews\n    }\n  };\n}\n/**\n * Home component.\n */\n\nconst Home = props => {\n  // Define the component classes.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm')),\n        queries = getTopLevelCategories(categoryList);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"ravebox\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(classes.introContainer, {\n      [classes.introContainerLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    fullWidth: largeScreen ? '270px' : '200px',\n    iconOnly: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    className: clsx(classes.introText, {\n      [classes.introTextLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Everything reviewed in 2 minutes or less.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(LinkElement, {\n    path: '/product/add',\n    styleType: StyleType.BUTTON_PRIMARY,\n    title: \"Post a rave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[0]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[0]],\n    title: __jsx(ListTitle, {\n      title: `${categoryList[0].label} raves`,\n      url: `/categories/${categoryList[0].key}`,\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[1]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[1]],\n    title: __jsx(ListTitle, {\n      title: `${categoryList[1].label} raves`,\n      url: `/categories/${categoryList[1].key}`,\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: clsx(classes.aboutContainer, {\n      [classes.aboutContainerLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h2\",\n    className: clsx(classes.aboutText, {\n      [classes.aboutTextLarge]: largeScreen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, \"A way to discover products and share your experiences with the world.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, __jsx(LinkElement, {\n    path: '/about',\n    styleType: StyleType.BUTTON_SECONDARY_INVERSE,\n    title: \"About ravebox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[2]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[2]],\n    title: __jsx(ListTitle, {\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      title: `${categoryList[2].label} raves`,\n      url: `/categories/${categoryList[2].key}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, props.categoryGroup && props.categoryGroup[queries[3]] && __jsx(ListByQuery, {\n    listType: ReviewListType.CATEGORY,\n    presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n    reviews: props.categoryGroup[queries[3]],\n    title: __jsx(ListTitle, {\n      presentationType: largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE,\n      title: `${categoryList[3].label} raves`,\n      url: `/categories/${categoryList[3].key}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/jay/Documents/projects/ravebox/client/pages/index.tsx"],"names":["clsx","createStyles","makeStyles","useTheme","Grid","Head","React","LinkElement","Typography","useMediaQuery","Logo","ListByQuery","ListTitle","ListByQueryRequest","PresentationType","ReviewListType","StyleType","categoryList","require","ontology","useStyles","theme","aboutContainer","backgroundColor","palette","secondary","dark","padding","spacing","aboutContainerLarge","aboutText","color","common","white","fontSize","fontWeight","marginBottom","marginTop","textAlign","textShadow","aboutTextLarge","containerPadding","paddingLeft","paddingRight","introContainer","introContainerLarge","introText","text","introTextLarge","getTopLevelCategories","list","categories","i","current","push","key","length","getServerSideProps","queries","reviewGroup","listType","CATEGORY","console","log","props","reviews","Home","classes","largeScreen","breakpoints","up","BUTTON_PRIMARY","categoryGroup","GRID","SCROLLABLE","label","BUTTON_SECONDARY_INVERSE"],"mappings":"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","sourcesContent":["/**\n * index.tsx\n * Home screen.\n */\nimport API from '../src/utils/api/Api.model';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Head from 'next/head'\nimport * as React from 'react';\nimport LinkElement from '../src/components/elements/link/Link';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  GetServerSideProps\n} from 'next'\n\n// Components.\nimport Logo from '../src/components/logo/Logo';\nimport ListByQuery from '../src/components/review/listByQuery/ListByQuery';\nimport ListTitle from '../src/components/elements/listTitle/ListTitle';\nimport ListByQueryRequest from './api/ListByQuery/ListByQuery.api';\n\n// Enumerators.\nimport {\n  PresentationType,\n  ReviewListType\n} from '../src/components/review/listByQuery/ListByQuery.enum';\nimport { StyleType } from '../src/components/elements/link/Link.enum';\n\n// Interfaces.\nimport { Category, CategoryItem } from '../src/components/category/Category.interface';\nimport { HomeProps } from './Home.interface';\nimport { ReviewGroup } from '../src/components/review/Review.interface';\n\n// Retrieve the list of categories.\nconst categoryList: Array<Category> = require('../src/components/category/categories.json').ontology;\n\n/**\n * Create the theme styles to be used for the display.\n */\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    aboutContainer: {\n      backgroundColor: theme.palette.secondary.dark,\n      padding: theme.spacing(6, 2),\n    },\n    aboutContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    aboutText: {\n      color: theme.palette.common.white,\n      fontSize: '1.8rem',\n      fontWeight: 400,\n      marginBottom: theme.spacing(6),\n      marginTop: theme.spacing(0),\n      textAlign: 'center',\n      textShadow: `0 1px 1px rgba(0,32,27,0.2)`\n    },\n    aboutTextLarge: {\n      fontSize: '2.5rem',\n      marginTop: theme.spacing(6),\n    },\n    containerPadding: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    introContainer: {\n      backgroundColor: theme.palette.common.white,\n      padding: theme.spacing(4, 2, 4),\n    },\n    introContainerLarge: {\n      padding: theme.spacing(8, 2, 12)\n    },\n    introText: {\n      color: theme.palette.text.secondary,\n      fontSize: '1.8rem',\n      fontWeight: 300,\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      textAlign: 'center'\n    },\n    introTextLarge: {\n      fontSize: '2.5rem'\n    }\n  })\n);\n\n/**\n * Retrieves the top level product categories.\n *\n * @return Array<string>\n */\nconst getTopLevelCategories: (\n  list: Array<Category>\n) => Array<string> = (\n  list: Array<Category>\n): Array<string> => {\n  const categories: Array<string> = [];\n\n  // Loop through the list of categories and add the top level items to the\n  // array.\n  let i: number = 0;\n\n  do {\n    const current: Category = list[i];\n    categories.push(current.key);\n    i++;\n  } while (i < list.length);\n\n  return categories;\n}\n\n/**\n * Server-side request handling.\n */\nexport async function getServerSideProps() {\n  const queries: Array<string> = getTopLevelCategories(categoryList); \n\n  const reviewGroup = await ListByQueryRequest({\n    listType: ReviewListType.CATEGORY,\n    queries: queries\n  });\n\n  console.log(reviewGroup);\n\n  return {\n    props: {\n      reviewGroup: reviewGroup.reviews\n    } \n  }\n}\n\n/**\n * Home component.\n */\nconst Home: React.FC<HomeProps> = (props: HomeProps) => {\n  // Define the component classes.\n  const classes = useStyles(),\n        theme = useTheme(),\n        largeScreen = useMediaQuery(theme.breakpoints.up('sm')),\n        queries: Array<string> = getTopLevelCategories(categoryList); \n\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>ravebox</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <Grid\n        container\n        direction='column'\n      >\n        <Grid item xs={12} className={clsx(\n            classes.introContainer,\n            {\n              [classes.introContainerLarge]: largeScreen\n            }\n          )}\n        >\n          <Grid\n            container\n            direction='column'\n            alignItems='center'\n          >\n            <Grid item xs={12}>\n              <Logo\n                fullWidth={largeScreen ? '270px' : '200px'}\n                iconOnly={false}\n              /> \n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h1' className={clsx(\n                  classes.introText,\n                  {\n                    [classes.introTextLarge]: largeScreen\n                  }\n                )}\n              >\n                Everything reviewed in 2 minutes or less.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <LinkElement\n                path={'/product/add'}\n                styleType={StyleType.BUTTON_PRIMARY}\n                title='Post a rave'\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[0]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[0]]}\n              title={\n                <ListTitle\n                  title={`${categoryList[0].label} raves`}\n                  url={`/categories/${categoryList[0].key}`}\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[1]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[1]]}\n              title={\n                <ListTitle\n                  title={`${categoryList[1].label} raves`}\n                  url={`/categories/${categoryList[1].key}`}\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12} className={clsx(\n            classes.aboutContainer,\n            {\n              [classes.aboutContainerLarge]: largeScreen\n            }\n          )}\n        >\n          <Grid\n            container\n            direction='column'\n            alignItems='center'\n          >\n            <Grid item xs={12} md={9}>\n              <Typography variant='h2' className={clsx(\n                  classes.aboutText,\n                  {\n                    [classes.aboutTextLarge]: largeScreen\n                  }\n                )}\n              >\n                A way to discover products and share your experiences with the world.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <LinkElement\n                path={'/about'}\n                styleType={StyleType.BUTTON_SECONDARY_INVERSE}\n                title='About ravebox'\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[2]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[2]]}\n              title={\n                <ListTitle\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                  title={`${categoryList[2].label} raves`}\n                  url={`/categories/${categoryList[2].key}`}\n                />\n              }\n            />\n          }\n        </Grid>\n        <Grid item xs={12}>\n          {props.categoryGroup && props.categoryGroup[queries[3]] &&\n            <ListByQuery\n              listType={ReviewListType.CATEGORY}\n              presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE}\n              reviews={props.categoryGroup[queries[3]]}\n              title={\n                <ListTitle\n                  presentationType={largeScreen ? PresentationType.GRID : PresentationType.SCROLLABLE} \n                  title={`${categoryList[3].label} raves`}\n                  url={`/categories/${categoryList[3].key}`}\n                />\n              }\n            />\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}