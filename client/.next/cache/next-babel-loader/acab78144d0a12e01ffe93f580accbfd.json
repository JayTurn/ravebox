{"ast":null,"code":"/**\n * ListByQuery.api.tsx\n * Performs a request to retrieve a list of reviews based on the query provided.\n */\n// Modules.\nimport API from '../../../utils/api/Api.model'; // Enumerators.\n\nimport { RequestType } from '../../../utils/api/Api.enum';\nimport { QueryPath, ReviewListType } from './ListByQuery.enum'; // Interfaces.\n\n/**\n * Performs the request for a list of reviews based on a list of queries.\n *\n * @param { Array<string> } queries - the list of queries.\n */\nconst ListByQueryRequest = params => {\n  // Retrieve the query path.\n  let path;\n\n  switch (params.listType) {\n    case ReviewListType.PRODUCT:\n      path = QueryPath.PRODUCT;\n      break;\n\n    default:\n      path = QueryPath.CATEGORY;\n      break;\n  } // Perform the API request to get the review group.\n\n\n  return API.requestAPI(path, {\n    method: RequestType.POST,\n    body: JSON.stringify({\n      queries: params.queries,\n      ignore: params.ignoreProductIds ? params.ignoreProductIds : undefined\n    })\n  }).then(response => {\n    return response;\n  });\n};\n\nexport default ListByQueryRequest;","map":{"version":3,"sources":["/client/app/src/pages/api/ListByQuery/ListByQuery.api.tsx"],"names":["API","RequestType","QueryPath","ReviewListType","ListByQueryRequest","params","path","listType","PRODUCT","CATEGORY","requestAPI","method","POST","body","JSON","stringify","queries","ignore","ignoreProductIds","undefined","then","response"],"mappings":"AAAA;;;;AAKA;AACA,OAAOA,GAAP,MAAgB,8BAAhB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SACEC,SADF,EAEEC,cAFF,QAGO,oBAHP,C,CAKA;;AAMA;;;;;AAKA,MAAMC,kBAEmC,GACvCC,MAD0C,IAED;AAEzC;AACA,MAAIC,IAAJ;;AAEA,UAAQD,MAAM,CAACE,QAAf;AACE,SAAKJ,cAAc,CAACK,OAApB;AACEF,MAAAA,IAAI,GAAGJ,SAAS,CAACM,OAAjB;AACA;;AACF;AACEF,MAAAA,IAAI,GAAGJ,SAAS,CAACO,QAAjB;AACA;AANJ,GALyC,CAczC;;;AACA,SAAOT,GAAG,CAACU,UAAJ,CAA4CJ,IAA5C,EAAkD;AACvDK,IAAAA,MAAM,EAAEV,WAAW,CAACW,IADmC;AAEvDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,OAAO,EAAEX,MAAM,CAACW,OADG;AAEnBC,MAAAA,MAAM,EAAEZ,MAAM,CAACa,gBAAP,GAA0Bb,MAAM,CAACa,gBAAjC,GAAoDC;AAFzC,KAAf;AAFiD,GAAlD,EAONC,IAPM,CAOAC,QAAD,IAA2C;AAC/C,WAAOA,QAAP;AACD,GATM,CAAP;AAUD,CA7BD;;AA+BA,eAAejB,kBAAf","sourcesContent":["/**\n * ListByQuery.api.tsx\n * Performs a request to retrieve a list of reviews based on the query provided.\n */\n\n// Modules.\nimport API from '../../../utils/api/Api.model';\n\n// Enumerators.\nimport { RequestType } from '../../../utils/api/Api.enum';\nimport {\n  QueryPath,\n  ReviewListType\n} from './ListByQuery.enum';\n\n// Interfaces.\nimport {\n  RetrieveListByQueryParams,\n  RetrieveListByQueryResponse\n} from './ListByQuery.interface';\n\n/**\n * Performs the request for a list of reviews based on a list of queries.\n *\n * @param { Array<string> } queries - the list of queries.\n */\nconst ListByQueryRequest: (\n  params: RetrieveListByQueryParams\n) => Promise<RetrieveListByQueryResponse> = (\n  params: RetrieveListByQueryParams\n): Promise<RetrieveListByQueryResponse> => {\n\n  // Retrieve the query path.\n  let path: string;\n\n  switch (params.listType) {\n    case ReviewListType.PRODUCT:\n      path = QueryPath.PRODUCT;\n      break;\n    default:\n      path = QueryPath.CATEGORY;\n      break;\n  }\n\n  // Perform the API request to get the review group.\n  return API.requestAPI<RetrieveListByQueryResponse>(path, {\n    method: RequestType.POST,\n    body: JSON.stringify({\n      queries: params.queries,\n      ignore: params.ignoreProductIds ? params.ignoreProductIds : undefined\n    })\n  })\n  .then((response: RetrieveListByQueryResponse) => {\n    return response;\n  });\n}\n\nexport default ListByQueryRequest;\n"]},"metadata":{},"sourceType":"module"}