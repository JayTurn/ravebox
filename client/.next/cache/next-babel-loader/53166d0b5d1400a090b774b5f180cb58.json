{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/client/app/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/**\n * _app.tsx\n * Application entry\n */\n// Modules.\nimport { createStyles, makeStyles, ThemeProvider, useTheme, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Head from 'next/head';\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'; // Theme.\n\nimport RaveboxTheme from '../src/theme/RaveboxTheme';\nimport DesktopRaveboxTheme from '../src/theme/DesktopRaveboxTheme'; // Define the snackbar styles.\n\nvar StyledSnackbar = withStyles(function (theme) {\n  return {\n    variantSuccess: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white\n    },\n    variantError: {\n      backgroundColor: theme.palette.error.dark,\n      color: theme.palette.common.white\n    }\n  };\n})(SnackbarProvider); // Application menu drawer sizes.\n\nvar lgOpenDrawerWidth = 240,\n    lgClosedDrawerWidth = 70;\n/**\n * Create styles for the shifting content.\n */\n\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    lgContent: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    lgContentOpen: {\n      width: \"calc(100% - \".concat(lgOpenDrawerWidth, \"px)\"),\n      marginLeft: lgOpenDrawerWidth,\n      maxWidth: \"calc(100% - \".concat(lgOpenDrawerWidth, \"px)\")\n    },\n    lgContentClosed: {\n      width: \"calc(100% - \".concat(lgClosedDrawerWidth, \"px)\"),\n      marginLeft: lgClosedDrawerWidth,\n      maxWidth: \"calc(100% - \".concat(lgClosedDrawerWidth, \"px)\")\n    },\n    xLgContentOpen: {\n      width: \"calc(100% - \".concat(lgOpenDrawerWidth, \"px)\"),\n      marginLeft: lgOpenDrawerWidth\n    },\n    xLgContentClosed: {\n      width: \"calc(100% - \".concat(lgClosedDrawerWidth, \"px)\"),\n      marginLeft: lgClosedDrawerWidth\n    }\n  });\n});\n/**\n * App component.\n */\n\nexport default function MyApp(props) {\n  _s();\n\n  var Component = props.Component,\n      pageProps = props.pageProps; // Match the large media query size.\n\n  var theme = useTheme(),\n      mediumScreen = useMediaQuery(theme.breakpoints.only('sm')),\n      largeScreen = useMediaQuery(theme.breakpoints.up('md')),\n      extraLargeScreen = useMediaQuery(theme.breakpoints.up('xl')),\n      classes = useStyles();\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: largeScreen ? DesktopRaveboxTheme : RaveboxTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(MyApp, \"jJwYfRv9rswkL5xbB+YpLDoq+Qw=\", false, function () {\n  return [useTheme, useMediaQuery, useMediaQuery, useMediaQuery, useStyles];\n});\n\n_c = MyApp;\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/client/app/pages/_app.tsx"],"names":["createStyles","makeStyles","ThemeProvider","useTheme","withStyles","CssBaseline","Head","React","SnackbarProvider","PropTypes","useMediaQuery","RaveboxTheme","DesktopRaveboxTheme","StyledSnackbar","theme","variantSuccess","backgroundColor","palette","primary","dark","color","common","white","variantError","error","lgOpenDrawerWidth","lgClosedDrawerWidth","useStyles","lgContent","transition","transitions","create","easing","sharp","duration","leavingScreen","lgContentOpen","width","marginLeft","maxWidth","lgContentClosed","xLgContentOpen","xLgContentClosed","MyApp","props","Component","pageProps","mediumScreen","breakpoints","only","largeScreen","up","extraLargeScreen","classes","useEffect","jssStyles","document","querySelector","parentElement","removeChild","propTypes","elementType","isRequired","object"],"mappings":"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","sourcesContent":["/**\n * _app.tsx\n * Application entry\n */\n\n// Modules.\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  ThemeProvider,\n  useTheme,\n  withStyles\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Head from 'next/head';\nimport React from 'react';\nimport {\n  SnackbarProvider\n} from 'notistack';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Theme.\nimport RaveboxTheme from '../src/theme/RaveboxTheme';\nimport DesktopRaveboxTheme from '../src/theme/DesktopRaveboxTheme';\n\n// Define the snackbar styles.\nconst StyledSnackbar = withStyles((theme: Theme) => ({\n  variantSuccess: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white\n  },\n  variantError: {\n    backgroundColor: theme.palette.error.dark,\n    color: theme.palette.common.white\n  }\n}))(SnackbarProvider);\n\n// Application menu drawer sizes.\nconst lgOpenDrawerWidth: number = 240,\n      lgClosedDrawerWidth: number = 70;\n\n/**\n * Create styles for the shifting content.\n */\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  lgContent: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  lgContentOpen: {\n    width: `calc(100% - ${lgOpenDrawerWidth}px)`,\n    marginLeft: lgOpenDrawerWidth,\n    maxWidth: `calc(100% - ${lgOpenDrawerWidth}px)`,\n  },\n  lgContentClosed: {\n    width: `calc(100% - ${lgClosedDrawerWidth}px)`,\n    marginLeft: lgClosedDrawerWidth,\n    maxWidth: `calc(100% - ${lgClosedDrawerWidth}px)`,\n  },\n  xLgContentOpen: {\n    width: `calc(100% - ${lgOpenDrawerWidth}px)`,\n    marginLeft: lgOpenDrawerWidth,\n  },\n  xLgContentClosed: {\n    width: `calc(100% - ${lgClosedDrawerWidth}px)`,\n    marginLeft: lgClosedDrawerWidth\n  }\n}));\n\n/**\n * App component.\n */\nexport default function MyApp(props) {\n  const { Component, pageProps } = props;\n\n  // Match the large media query size.\n  const theme = useTheme(),\n        mediumScreen = useMediaQuery(theme.breakpoints.only('sm')),\n        largeScreen = useMediaQuery(theme.breakpoints.up('md')),\n        extraLargeScreen = useMediaQuery(theme.breakpoints.up('xl')),\n        classes = useStyles();\n\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>My page</title>\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={largeScreen ? DesktopRaveboxTheme : RaveboxTheme}>\n        <CssBaseline />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}